name: Semantic release

on: push

jobs:
  publish:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: NodeJs aufsetzen
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"

      # NPM ci mit Cache
      - name: Cache dependencies
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci
      #
      - name: Commit message checken
        run: npx commitlint --from=HEAD~1 --config commitlint.config.ts

      - name: Build Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.GH_TOKEN }}
          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
